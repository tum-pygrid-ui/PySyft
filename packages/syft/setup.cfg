[metadata]
name = syft
description = PySyft is a Python library for secure and private Deep Learning, allowing you to compute on data you do not own and cannot see
author = OpenMined
author_email = info@openmined.org
license = Apache-2.0
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/OpenMined/PySyft
project_urls =
    Documentation = https://github.com/OpenMined/PySyft
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.

torch_ecosystem =
    torch>=1.4.0,<=1.8.1
    torchcsprng<=0.2.1
    torchvision>=0.5,<=0.9.1

syft =
    %(torch_ecosystem)s #should remove this and make it a lib
    ascii_magic==1.6
    werkzeug==2.0.2
    autodp==0.2
    bcrypt==3.2.0
    cachetools==4.2.4
    forbiddenfruit==0.1.4
    loguru==0.5.3
    names==0.3.0
    packaging==21.0
    pandas==1.3.3
    protobuf==3.18.1
    pyarrow==5.0.0
    pydantic[email]==1.8.2
    PyJWT==1.7.1
    PyNaCl==1.4.0
    pymbolic==2021.1
    sympy==1.9
    requests==2.25.1
    requests_toolbelt==0.9.1
    typing_extensions==3.10.0.2 # backport to older python 3
    SQLAlchemy==1.4.25
    numpy==1.21.2
    importlib_metadata==4.8.1
    torch==1.8.1

install_requires =
    %(syft)s


# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
dev =
    %(test_plugins)s
    pre-commit
    bandit
    black
    black-nb
    doc8
    flake8
    isort
    matplotlib
    nbconvert
    nbformat
    protoc-wheel-0
    safety
    mypy


test_plugins =
    pytest
    pytest-cov
    pytest-xdist[psutil]
    pytest-asyncio
    pytest-benchmark
    pytest-custom_exit_code
    pytest-randomly
    pytest-sugar
    coverage==6.0b1


[options.entry_points]
console_scripts =
    syft-device=syft.grid.example_nodes.device:run
    syft-domain=syft.grid.example_nodes.domain:run
    syft-network=syft.grid.example_nodes.network:run
    syft-proto=syft.protobuf_setuptools:run

[test]
addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command-line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
filterwarnings =
    ignore:.*Deprecated.*:DeprecationWarning


[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
ignore =
    N805
    W503
    C901 # TODO: Complex function, (gmuraru) I think we should fix this
max-line-length = 120
exclude =
    .tox
    build
    dist
    .git
    .eggs
    docs/conf.py
    __pycache__
    venv
    src/syft/proto
    src/syft/notebooks/examples*

max-complexity = 11
show-source = true
statistics = true
count = true

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = syft
extensions =
    markdown

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
        syft
data_files =
    img = img/*

[mypy]
python_version = 3.9
